import{d as k,s as f,k as i,aV as y,t as w,R as p,o as c,S as B,T as V,c as U,ae as b,E as L,w as A,r as C}from"./index-DApiqAPi.js";const F={class:"row q-gutter-x-sm justify-center"},R=k({__name:"BaseInputOtp",props:{inputLength:{}},emits:["on-submit"],setup(d,{emit:m}){const v=m,n=f(()=>d.inputLength),o=i([]),u=i([]),l=f(()=>{const e=u.value.filter(s=>s);return n.value!==e.length?"":e.join("")});y(()=>{o.value=[]});const h=(e,s)=>{e&&(o.value[s]=e)},r=e=>{e>=0&&(e<n.value?o.value[e].select():l.value&&o.value[e-1].blur())},_=(e,s)=>{e&&r(s+1)},g=(e,s)=>{const t=e.key;["Tab","Shift","Meta","Control","Alt"].includes(t)||["Delete"].includes(t)||(t==="ArrowLeft"||t==="Backspace"?r(s-1):t==="ArrowRight"&&r(s+1))};return w(l,()=>{l.value&&v("on-submit",l.value)}),(e,s)=>(c(),p("div",F,[(c(!0),p(B,null,V(n.value,t=>(c(),U(b,L({ref_for:!0},e.$attrs,{ref_for:!0,ref:a=>h(a,t-1),key:t,modelValue:u.value[t-1],"onUpdate:modelValue":[a=>u.value[t-1]=a,a=>_(a,t-1)],maxlength:"1",outlined:"","input-class":"text-center",style:{width:"6ch"},onKeyup:a=>g(a,t-1)}),{default:A(()=>[C(e.$slots,"default")]),_:2},1040,["modelValue","onUpdate:modelValue","onKeyup"]))),128))]))}});export{R as _};
